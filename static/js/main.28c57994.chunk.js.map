{"version":3,"sources":["redux/constants/ActionTypes.js","redux/actions/Item.js","assets/svg/Search.jsx","assets/svg/Cross.jsx","utils/images.js","containers/layouts/Header.jsx","components/LoadingSpinner.jsx","containers/layouts/Layout.jsx","components/AddItem.jsx","containers/Home.jsx","containers/Root.jsx","utils/common.js","utils/APICaller.js","redux/sagas/getItem.js","redux/sagas/index.js","redux/reducer/loading.js","redux/reducer/items.js","redux/reducer/user.js","redux/reducer/index.js","redux/store.js","serviceWorker.js","index.js","assets/img/logo.png","assets/img/defaultBg.jpg","assets/css/styles.scss","assets/css/styles-xs.scss"],"names":["ActionTypes","UPDATE_LOADING","GET_ITEMS","GET_ITEMS_SUCCESS","GET_ITEMS_FAILURE","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","ITEMS_FILTER_CHANGE","CLEAR_ITEMS_LIST","SAVE_USER","USER_LOGOUT","getItems","type","itemsFilterChange","payload","Search","props","className","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","Cross","size","images","logo","defaultBg","imageName","Header","dispatch","filters","pathname","location","search","myInp","useRef","loadData","searchValue","delayedQuery","useCallback","debounce","Navbar","color","dark","expand","NavbarBrand","href","src","getImage","alt","style","maxHeight","opacity","onClick","history","push","Nav","navbar","current","focus","placeholder","onChange","event","value","target","sort","order","skip","ref","length","HeaderWithRouter","withRouter","connect","state","itemsReducer","LoadingSpinner","colorFirst","colorSecond","radiusFirst","radiusSecond","preserveAspectRatio","cx","cy","ng-attr-r","ng-attr-stroke-width","ng-attr-stroke","ng-attr-stroke-dasharray","strokeLinecap","r","strokeDasharray","transform","attributeName","calcMode","values","keyTimes","dur","begin","repeatCount","ng-attr-stroke-dashoffset","strokeDashoffset","loading","loadingReducer","loadState","useHistory","useDispatch","useEffect","handleNav","Fragment","backgroundImage","backgroundPosition","backgroundSize","bind","children","AddItem","d1","Date","month","getMonth","dateString","getFullYear","toString","padStart","getDate","useState","text","settext","name","setname","keywords","setkeywords","date","setdate","oldId","setoldId","item","id","oldText","authorName","oldAuthorName","oldKeywords","createdDate","Form","onSubmit","preventDefault","currentDate","getTime","addItem","FormGroup","Input","rows","e","Button","disabled","items","activeIndex","setactiveIndex","map","index","key","Root","path","exact","component","Home","to","api_response","options","params","routeParams","reqUrl","split","data","keyValue","Promise","resolve","reject","a","response","localStorage","getItem","setItem","JSON","stringify","parse","isEmpty","filter","toLowerCase","includes","content","root","select","url","trim","call","APICaller","method","put","all","takeLatest","fork","initialState","action","itemsApiInProgress","totalItemCount","limit","setItemsLocalStorage","findIndex","userReducer","clear","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","rootsaga","Boolean","window","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.28c57994.chunk.js","sourcesContent":["const ActionTypes = {\n  UPDATE_LOADING: 'UPDATE_LOADING',\n  GET_ITEMS: 'GET_ITEMS',\n  GET_ITEMS_SUCCESS: 'GET_ITEMS_SUCCESS',\n  GET_ITEMS_FAILURE: 'GET_ITEMS_FAILURE',\n  ADD_ITEM: 'ADD_ITEM',\n  UPDATE_ITEM: 'UPDATE_ITEM',\n  DELETE_ITEM: 'DELETE_ITEM',\n  ITEMS_FILTER_CHANGE: 'ITEMS_FILTER_CHANGE',\n  CLEAR_ITEMS_LIST: 'CLEAR_ITEMS_LIST',\n  SAVE_USER: 'SAVE_USER',\n  USER_LOGOUT: 'USER_LOGOUT'\n}\n\nexport default ActionTypes\n","import ActionTypes from '../constants/ActionTypes'\n\nexport const getItems = () => {\n  return {\n    type: ActionTypes.GET_ITEMS\n  }\n}\n\nexport const clearItems = () => {\n  return {\n    type: ActionTypes.CLEAR_ITEMS_LIST\n  }\n}\n\nexport const itemsFilterChange = payload => ({\n  type: ActionTypes.ITEMS_FILTER_CHANGE,\n  payload\n})\n\nexport const addItem = payload => ({\n  type: ActionTypes.ADD_ITEM,\n  payload\n})\n\nexport const updateItem = payload => ({\n  type: ActionTypes.UPDATE_ITEM,\n  payload\n})\n\nexport const deleteItem = payload => ({\n  type: ActionTypes.DELETE_ITEM,\n  payload\n})\n","import React from 'react'\n\nexport default function Search(props) {\n  return (\n    <svg\n      className={props.className}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth={0}\n      viewBox=\"0 0 512 512\"\n      height=\"1em\"\n      width=\"1em\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\" />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport default function Cross(props) {\n  return (\n    <svg\n      className={props.className}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth={0}\n      viewBox=\"0 0 512 512\"\n      size={25}\n      height={25}\n      width={25}\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M405 136.798L375.202 107 256 226.202 136.798 107 107 136.798 226.202 256 107 375.202 136.798 405 256 285.798 375.202 405 405 375.202 285.798 256z\" />\n    </svg>\n  )\n}\n","import logo from 'assets/img/logo.png'\nimport defaultBg from 'assets/img/defaultBg.jpg'\n\nconst images = {\n  logo,\n  defaultBg\n}\nexport default function(imageName) {\n  return images[imageName]\n}\n","import React, { useRef, useCallback } from 'react'\nimport debounce from 'lodash/debounce'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Navbar, NavbarBrand, Nav } from 'reactstrap'\n\nimport Search from 'assets/svg/Search'\nimport Cross from 'assets/svg/Cross'\nimport getImage from 'utils/images'\nimport { getItems, itemsFilterChange, clearItems } from 'redux/actions/Item'\n\nconst Header = props => {\n  const {\n    dispatch,\n    filters,\n    location: { pathname }\n  } = props\n\n  const { search = '' } = filters\n  const myInp = useRef(null)\n  function loadData(searchValue) {\n    dispatch(clearItems())\n    dispatch(getItems())\n  }\n  const delayedQuery = useCallback(debounce(loadData, 300), [])\n\n  const onSearch = event => {\n    const {\n      target: { value }\n    } = event\n    dispatch(itemsFilterChange({ search: value, sort: '', order: '', skip: 0 }))\n\n    delayedQuery(value)\n  }\n  const clearSearch = () => {\n    dispatch(itemsFilterChange({ search: '', sort: '', order: '', skip: 0 }))\n    loadData('')\n  }\n\n  const moveToHome = () => {\n    props.history.push('/home')\n  }\n\n  return (\n    <div className=\"Header center\">\n      <Navbar color=\"none\" dark expand=\"md\" className=\"Header_navbar\">\n        <NavbarBrand href=\"#/home\">\n          <img src={getImage('logo')} alt=\"logo\" style={{ maxHeight: 35, opacity: 0.8 }} onClick={moveToHome} />\n        </NavbarBrand>\n        <Nav navbar className=\"Header_wrapper center\">\n          <div className=\"search-wrapper center\">\n            {pathname === '/home' ? (\n              <div\n                className=\"search center\"\n                onClick={() => {\n                  myInp.current.focus()\n                }}>\n                <Search className=\"Header_icon search_icon\" />\n                <input\n                  className=\"search_input\"\n                  placeholder=\"Search by name\"\n                  onChange={onSearch}\n                  value={search}\n                  ref={myInp}\n                />\n                {search.length ? <Cross onClick={clearSearch} /> : null}\n              </div>\n            ) : (\n              void 0\n            )}\n          </div>\n        </Nav>\n      </Navbar>\n    </div>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    filters: state.itemsReducer.filters\n  }\n}\n\nconst HeaderWithRouter = withRouter(props => <Header {...props} />)\nexport default connect(mapStateToProps)(HeaderWithRouter)\n","import React from 'react'\n\nexport const LoadingSpinner = props => {\n  const {\n    width = 150,\n    height = 150,\n    colorFirst = '#1d3f72',\n    colorSecond = '#5699d2',\n    strokeWidth = 4,\n    radiusFirst = 40,\n    radiusSecond = 35\n  } = props\n  return (\n    <svg\n      width={width}\n      height={height}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      className=\"lds-double-ring\">\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c1}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusFirst}\n        strokeWidth={strokeWidth}\n        stroke={colorFirst}\n        strokeDasharray=\"62.83185307179586 62.83185307179586\"\n        transform=\"rotate(199.69 50 50)\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle\n        cx={50}\n        cy={50}\n        ng-attr-r=\"{{config.radius2}}\"\n        ng-attr-stroke-width=\"{{config.width}}\"\n        ng-attr-stroke=\"{{config.c2}}\"\n        ng-attr-stroke-dasharray=\"{{config.dasharray2}}\"\n        ng-attr-stroke-dashoffset=\"{{config.dashoffset2}}\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        r={radiusSecond}\n        strokeWidth={strokeWidth}\n        stroke={colorSecond}\n        strokeDasharray=\"54.97787143782138 54.97787143782138\"\n        strokeDashoffset=\"54.97787143782138\"\n        transform=\"rotate(-199.69 50 50)\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          calcMode=\"linear\"\n          values=\"0 50 50;-360 50 50\"\n          keyTimes=\"0;1\"\n          dur=\"0.9s\"\n          begin=\"0s\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  )\n}\n\nexport default LoadingSpinner\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { getItems } from 'redux/actions/Item'\n\nimport Header from './Header'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport getImage from 'utils/images'\n// @ts-ignore\n// import colors from 'assets/css/colors.scss';\n\n// const { theme } = colors;\n\nconst Layout = props => {\n  const { loading } = props\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const {\n    location: { pathname = '' }\n  } = history\n  useEffect(() => {\n    dispatch(getItems())\n    // eslint-disable-next-line\n  }, [])\n  const handleNav = pathname => {\n    history.push({ pathname })\n  }\n  return (\n    <React.Fragment>\n      <div\n        className=\"fixed-body\"\n        style={{\n          opacity: 0.8,\n          backgroundImage: `url(${getImage('defaultBg')})`,\n          backgroundPosition: 'top',\n          backgroundSize: 'cover'\n        }}></div>\n      {loading && (\n        <div className=\"loading\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <Header />\n      <div className=\"Layout\">\n        <div className=\"Layout_body\">\n          <div className=\"Layout_tab\">\n            <div onClick={handleNav.bind('', '/home')} className={`tab ${pathname === '/home' ? 'active' : ''}`}>\n              View my Speeches\n            </div>\n            <div\n              onClick={handleNav.bind('', '/add-speech')}\n              className={`tab ${pathname === '/add-speech' ? 'active' : ''}`}>\n              Submit a new Speech\n            </div>\n          </div>\n          {props.children}\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loadingReducer.loadState\n  }\n}\nexport default connect(mapStateToProps)(Layout)\n","import React, { useState, useEffect } from 'react'\nimport { Button, Form, FormGroup, Input } from 'reactstrap'\nimport { useDispatch } from 'react-redux'\n\nimport { useHistory } from 'react-router-dom'\n\nimport { addItem, updateItem, deleteItem } from 'redux/actions/Item'\n\nfunction AddItem(props) {\n  const d1 = new Date()\n  const month = d1.getMonth() + 1\n  const dateString = `${d1.getFullYear()}-${month.toString().padStart(2, '0')}-${d1.getDate()}`\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [text, settext] = useState('')\n  const [name, setname] = useState('')\n  const [keywords, setkeywords] = useState('')\n  const [date, setdate] = useState(dateString)\n\n  const [oldId, setoldId] = useState('')\n\n  useEffect(() => {\n    if (props.item && props.item.id) {\n      const {\n        id: oldId = '',\n        text: oldText = '',\n        authorName: oldAuthorName = '',\n        keywords: oldKeywords = '',\n        createdDate = ''\n      } = props.item\n      settext(oldText)\n      setname(oldAuthorName)\n      setkeywords(oldKeywords)\n      setoldId(oldId)\n      setdate(createdDate)\n    }\n  }, [props.item])\n  //\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (!text || !name || !keywords) {\n      return\n    }\n    let currentDate = new Date()\n    if (oldId) {\n      dispatch(updateItem({ id: oldId, createdDate: date, text, authorName: name, keywords }))\n    } else {\n      let id = currentDate.getTime()\n      dispatch(addItem({ id, createdDate: date, text, authorName: name, keywords }))\n      history.push('/home')\n    }\n  }\n  const handleDelete = () => {\n    dispatch(deleteItem({ id: oldId }))\n  }\n  return (\n    <div className=\"AddItem\">\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Input\n            type=\"textarea\"\n            rows=\"6\"\n            name=\"text\"\n            id=\"exampleText\"\n            value={text}\n            onChange={e => settext(e.target.value)}\n            placeholder=\"Speech content show here\"\n          />\n        </FormGroup>\n        <div className=\"AddItem_row\">\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              id=\"exampleEmail\"\n              onChange={e => setname(e.target.value)}\n              placeholder=\"Auther\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              name=\"keywords\"\n              value={keywords}\n              onChange={e => setkeywords(e.target.value)}\n              id=\"keywords\"\n              placeholder=\"Speech keywords\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input type=\"date\" name=\"date\" value={date} onChange={e => setdate(e.target.value)} placeholder=\"Date\" />\n          </FormGroup>\n        </div>\n        <div className=\"footer_btn\">\n          <Button type=\"button\" color=\"danger\" onClick={handleDelete}>\n            Delete\n          </Button>\n\n          <Button type=\"submit\" disabled={!text || !name || !keywords}>\n            Save\n          </Button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default AddItem\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport AddItem from 'components/AddItem'\n\nconst Home = props => {\n  let { items } = props\n  const [activeIndex, setactiveIndex] = useState(0)\n\n  return (\n    <div className=\"Home\">\n      {items.length ? (\n        <div className=\"Home_row\">\n          <div className=\"Home_col-1\">\n            {items.map((item, index) => (\n              <div\n                key={item.id}\n                className={`Home_item ${activeIndex === index ? 'active' : ''}`}\n                onClick={setactiveIndex.bind('', index)}>\n                <span className=\"name\">{item.authorName}</span>\n                {activeIndex === index && <span>&#9658;</span>}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"Home_col-2\">\n            <AddItem item={items[activeIndex]} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"Home_noResult\">\n          <h4 className=\"title\">No result found</h4>\n        </div>\n      )}\n    </div>\n  )\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsReducer.items\n  }\n}\nexport default connect(mapStateToProps)(Home)\n","import React from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom'\n\nimport Layout from './layouts/Layout'\nimport Home from './Home'\nimport AddItem from 'components/AddItem'\n\nconst Root = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/add-speech\" exact component={AddItem} />\n\n        <Redirect to=\"/home\" />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default Root\n","export const routeMainStack = ['/item-detail', '/profile']\n\nconst d1 = new Date()\nconst month = d1.getMonth() + 1\nconst dateString = `${d1.getFullYear()}-${month.toString().padStart(2, '0')}-${d1.getDate()}`\nexport const api_response = [\n  {\n    id: 1582460208558,\n    text: 'some text some text some text some text some text some text some text some text ',\n    authorName: 'author-name',\n    createdDate: dateString,\n    keywords: 'keywords, keywords'\n  },\n  {\n    id: 1582460208557,\n    text: 'some text some text some text some text some text some text some text some text ',\n    authorName: 'author-name',\n    createdDate: dateString,\n    keywords: 'keywords, keywords'\n  },\n  {\n    id: 1582460208556,\n    text: 'some text some text some text some text some text some text some text some text ',\n    authorName: 'author-name',\n    createdDate: dateString,\n    keywords: 'keywords, keywords'\n  },\n  {\n    id: 1582460208555,\n    text: 'some text some text some text some text some text some text some text some text ',\n    authorName: 'author-name',\n    createdDate: dateString,\n    keywords: 'keywords, keywords'\n  }\n]\n\nexport const months = [\n  {\n    abbreviation: 'Jan',\n    name: 'January'\n  },\n  {\n    abbreviation: 'Feb',\n    name: 'February'\n  },\n  {\n    abbreviation: 'Mar',\n    name: 'March'\n  },\n  {\n    abbreviation: 'Apr',\n    name: 'April'\n  },\n  {\n    abbreviation: 'May',\n    name: 'May'\n  },\n  {\n    abbreviation: 'Jun',\n    name: 'June'\n  },\n  {\n    abbreviation: 'Jul',\n    name: 'July'\n  },\n  {\n    abbreviation: 'Aug',\n    name: 'August'\n  },\n  {\n    abbreviation: 'Sep',\n    name: 'September'\n  },\n  {\n    abbreviation: 'Oct',\n    name: 'October'\n  },\n  {\n    abbreviation: 'Nov',\n    name: 'November'\n  },\n  {\n    abbreviation: 'Dec',\n    name: 'December'\n  }\n]\n","import { api_response } from './common'\nimport isEmpty from 'lodash/isEmpty'\n\nexport default options => {\n  let params = {}\n  // get url params\n  const routeParams = options.reqUrl.split('?')\n  if (routeParams.length > 1) {\n    let paramsStr = routeParams[1]\n    paramsStr.split('&').map(data => {\n      let keyValue = data.split('=')\n      params[keyValue[0]] = keyValue[1] ? keyValue[1] : ''\n      return ''\n    })\n  }\n\n  return new Promise(async (resolve, reject) => {\n    let response = localStorage.getItem('items')\n    if (response === null) {\n      response = api_response\n      localStorage.setItem('items', JSON.stringify(response))\n    } else {\n      response = JSON.parse(response)\n    }\n\n    if (response.length) {\n      if (!isEmpty(params.name)) {\n        response = response.filter(item => item['authorName'].toLowerCase().includes(params.name.toLowerCase()))\n      }\n      return resolve({\n        data: {\n          content: response\n        }\n      })\n    } else {\n      return reject({})\n    }\n  })\n}\n","import { all, call, put, takeLatest, select } from 'redux-saga/effects'\nimport ActionTypes from '../constants/ActionTypes'\nimport APICaller from 'utils/APICaller'\n\nexport function* getItems() {\n  const filters = yield select(state => state.itemsReducer.filters)\n  let { search = '' } = filters\n  let url = 'posts'\n  if (search.length) {\n    search = search.trim().toLowerCase()\n    url = `?${url}&name=${search}`\n  }\n  try {\n    const response = yield call(APICaller, { method: 'GET', reqUrl: url })\n    yield put({\n      type: ActionTypes.GET_ITEMS_SUCCESS,\n      payload: response.data\n    })\n  } catch (err) {\n    yield put({\n      type: ActionTypes.GET_ITEMS_FAILURE,\n      payload: []\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([takeLatest(ActionTypes.GET_ITEMS, getItems)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\n// import user from \"./user\";\nimport getItems from './getItem'\n\nexport default function* root() {\n  yield all([fork(getItems)])\n}\n","import ActionTypes from '../constants/ActionTypes'\n\nconst initialState = { loadState: false }\nconst loadingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOADING:\n      return { loadState: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default loadingReducer\n","import ActionTypes from '../constants/ActionTypes'\nimport findIndex from 'lodash/findIndex'\n\nconst initialState = {\n  items: [],\n  itemsApiInProgress: false,\n  totalItemCount: 1,\n  filters: {\n    search: '',\n    limit: 20,\n    skip: 0\n  }\n}\n\nconst setItemsLocalStorage = items => {\n  localStorage.setItem('items', JSON.stringify(items))\n}\nconst itemsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_ITEMS:\n      return { ...state, itemsApiInProgress: true }\n    case ActionTypes.GET_ITEMS_FAILURE:\n      return { ...state, itemsApiInProgress: false }\n    case ActionTypes.GET_ITEMS_SUCCESS:\n      return {\n        ...state,\n        items: [...state.items, ...action.payload.content],\n        itemsApiInProgress: false,\n        filters: {\n          ...state.filters,\n          skip: state.filters.skip + state.filters.limit\n        }\n      }\n    case ActionTypes.UPDATE_ITEM: {\n      const items = [...state.items],\n        index = findIndex(state.items, item => item.id === action.payload.id)\n      if (index !== -1) {\n        items[index] = action.payload\n        setItemsLocalStorage(items)\n      }\n      return {\n        ...state,\n        items: items\n      }\n    }\n    case ActionTypes.ADD_ITEM: {\n      const items = [action.payload, ...state.items]\n      setItemsLocalStorage(items)\n      return {\n        ...state,\n        items\n      }\n    }\n    case ActionTypes.DELETE_ITEM: {\n      const items = state.items.filter(item => item.id !== action.payload.id)\n      setItemsLocalStorage(items)\n      return {\n        ...state,\n        items\n      }\n    }\n    case ActionTypes.CLEAR_ITEMS_LIST:\n      return { ...state, items: [] }\n    case ActionTypes.ITEMS_FILTER_CHANGE: {\n      return { ...state, filters: { ...state.filters, ...action.payload } }\n    }\n    default:\n      return state\n  }\n}\n\nexport default itemsReducer\n","import ActionTypes from '../constants/ActionTypes'\n\nconst initialState = {\n  name: ''\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SAVE_USER:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case ActionTypes.USER_LOGOUT:\n      localStorage.clear()\n      return {\n        ...initialState\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","import { combineReducers } from 'redux'\n\nimport loadingReducer from './loading'\nimport itemsReducer from './items'\nimport userReducer from './user'\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  itemsReducer,\n  userReducer\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootsaga from './sagas'\nimport rootReducer from './reducer'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootsaga)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './assets/css/styles.scss';\nimport './assets/css/styles-xs.scss';\n\nimport App from './containers/Root';\nimport store from './redux/store';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename={process.env.REACT_APP_PUBLIC_URL}>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.82a318cc.png\";","module.exports = __webpack_public_path__ + \"static/media/defaultBg.d4cee3db.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#b22222\",\"themeBg\":\"rgba(255,255,255,0.8)\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"#b22222\",\"themeBg\":\"rgba(255,255,255,0.8)\"};"],"sourceRoot":""}